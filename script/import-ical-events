#!/usr/bin/env ruby
# frozen_string_literal: true

require 'yaml'
require 'front_matter_parser'
require 'fileutils'

# Add the lib directory to the load path
$LOAD_PATH.unshift(File.expand_path('../lib', __dir__))
require 'event_ingestor'

SOURCE_DIR = "_sources"
EVENTS_DIR   = "_events"

unless Dir.exist?(SOURCE_DIR)
  warn "❌ Directory '#{SOURCE_DIR}' not found."
  exit 1
end

FileUtils.mkdir_p(EVENTS_DIR)

source_files = Dir.glob(File.join(SOURCE_DIR, "*.md"))
puts "🔍 Found #{source_files.count} source files."

success_count = 0
error_count = 0

source_files.each do |source_file|
  begin
    parsed = FrontMatterParser::Parser.new(:md).call(File.read(source_file))
    data = parsed.front_matter

    source_name = data["title"]
    ical_url = data["events_ical_url"]

    if ical_url.nil? || ical_url.strip.empty?
      puts "⚪️ Skipping #{source_name || source_file} — no events_ical_url defined."
      next
    end

    puts "📥 Importing events for #{source_name}..."
    EventIngestor.ingest(
      ical_url: ical_url,
      source_name: source_name,
      output_directory: EVENTS_DIR
    )

    success_count += 1

  rescue StandardError => e
    error_count += 1
    warn "❌ Error importing #{source_file}: #{e.class} — #{e.message}"
    warn e.backtrace.first(3).join("\n")
  end
end

puts "\n✅ Done! #{success_count} agencies imported successfully, #{error_count} had errors."
